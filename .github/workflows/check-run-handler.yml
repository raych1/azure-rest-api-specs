name: Handle Azure Pipeline Check Run

on:
  check_run:
    types: [completed]

jobs:
  process-check-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Process Check Run Event
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Log the entire payload first for debugging
              console.log('Full context payload:');
              console.log(JSON.stringify(context.payload, null, 2));

              const checkRun = context.payload.check_run;
              if (!checkRun) {
                throw new Error('No check run data found in the payload');
              }

              // Log the entire checkRun object
              console.log('Full check run object:');
              console.log(JSON.stringify(checkRun, null, 2));

              console.log("Check run name:", checkRun.name);
              if (checkRun.name !== 'test-sdk-gen (SDK Generation Job)') {
                console.log('Ignoring check run with name:', checkRun.name);
                return;
              }

              console.log('Check run details:', {
                name: checkRun.name,
                conclusion: checkRun.conclusion,
                status: checkRun.status,
                prNumber: pullRequest.number,
                headSha: pullRequest.head_sha
              });

              // Search for issues related to the head_sha
              if (checkRun.head_sha) {
                console.log('Searching for issues with SHA:', checkRun.head_sha);
                try {
                  const searchResponse = await github.rest.search.issuesAndPullRequests({
                    q: `sha:${checkRun.head_sha}`
                  });

                  console.log('Search response:', {
                    total_count: searchResponse.data.total_count,
                    items_count: searchResponse.data.items.length
                  });

                  if (searchResponse.data.items.length > 0) {
                    const firstItem = searchResponse.data.items[0];
                    console.log('First matching issue/PR URL:', firstItem.html_url);
                  } else {
                    console.log('No issues found for this SHA');
                  }
                } catch (searchError) {
                  console.error('Error searching issues:', searchError);
                }
              }
            } catch (error) {
              console.error('Error processing check run:', error);
              throw error;
            }
